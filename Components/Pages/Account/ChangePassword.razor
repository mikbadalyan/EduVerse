@page "/change-password"
@using EduVerse.ViewModels
@inject NavigationManager Navigation
@inject Services.AccountService AccountService
@rendermode InteractiveServer

<PageTitle>Change Password</PageTitle>

<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Change Password</h2>
        <EditForm Model="ChangePasswordModel" OnValidSubmit="HandleChangePassword">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <InputText id="Email" class="form-control" @bind-Value="ChangePasswordModel.Email" readonly />
            </div>

            <div class="mb-3">
                <label for="NewPassword" class="form-label">New Password</label>
                <InputText id="NewPassword" class="form-control" type="password" @bind-Value="ChangePasswordModel.NewPassword" />
                <ValidationMessage For="@(() => ChangePasswordModel.NewPassword)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="ConfirmNewPassword" class="form-label">Confirm New Password</label>
                <InputText id="ConfirmNewPassword" class="form-control" type="password" @bind-Value="ChangePasswordModel.ConfirmNewPassword" />
                <ValidationMessage For="@(() => ChangePasswordModel.ConfirmNewPassword)" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-success w-100 p-2">Submit</button>

            <div class="text-center mt-2">
                <a class="text-decoration-none mt-3" @onclick="NavigateToVerifyEmail">Back</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private ChangePasswordViewModel ChangePasswordModel = new();

    private async Task HandleChangePassword()
    {
        var result = await AccountService.ChangePasswordAsync(ChangePasswordModel);
        if (result.IsSuccess)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            // Display errors if password change fails
            foreach (var error in result.Errors)
            {
                Console.WriteLine(error);
            }
        }
    }

    private void NavigateToVerifyEmail()
    {
        Navigation.NavigateTo("/verify-email");
    }
}
