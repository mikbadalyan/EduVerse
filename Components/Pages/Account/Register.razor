@page "/register"
@using EduVerse.Components.Layout
@using EduVerse.ViewModels

@inject NavigationManager Navigation
@inject Services.AccountService AccountService
@rendermode InteractiveServer

<PageTitle>Register</PageTitle>

<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Register</h2>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <!-- Form Fields -->
            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <InputText id="Name" class="form-control" @bind-Value="RegisterModel.Name" />
                <ValidationMessage For="@(() => RegisterModel.Name)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <InputText id="Email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="Password" class="form-label">Password</label>
                <InputText id="Password" class="form-control" type="password" @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="ConfirmPassword" class="form-label">Confirm Password</label>
                <InputText id="ConfirmPassword" class="form-control" type="password" @bind-Value="RegisterModel.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-success w-100 p-2">Register</button>

            <p class="text-center mt-2">
                Already have an account?
                <a class="text-decoration-none" @onclick="NavigateToLogin">Login</a>
            </p>
            <div class="text-center">
                <a class="text-decoration-none mt-3" @onclick="NavigateToHome">Back</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private RegisterViewModel RegisterModel = new();

    private string? ErrorMessage;



    private async Task HandleRegister()

    {

        // Step 1: Check if the user already exists

        // var existingUser = await AccountService.FindUserByEmailAsync(RegisterModel.Email);

        // if (existingUser != null)

        // {

        //     ErrorMessage = "Email is already registered.";

        //     return;

        // }



        // Step 2: Register the user and send email verification

        var result = await AccountService.RegisterAsync(RegisterModel);

        if (result.IsSuccess)

        {

            ErrorMessage = null;

            Navigation.NavigateTo("/confirmation"); // Redirect to a confirmation page

        }

        else

        {

            // Handle errors, e.g., display messages to the user

            foreach (var error in result.Errors)

            {

                Console.WriteLine(error);

            }

        }

    }



    private void NavigateToLogin()

    {

        Navigation.NavigateTo("/login");

    }



    private void NavigateToHome()

    {

        Navigation.NavigateTo("/");

    }
}
